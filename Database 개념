데이터베이스(Database) 란
- 데이터베이스는 데이터를 저장하고 조회하는 프로그램이다.

데이터베이스의 특징
- 통합된 데이터: 여러가지 데이터를 통합하여 저장하는데 중복된 정보가 있다면 이를 그대로 저장하면 용량 낭비가 발생하는 비효율적인 현상이 발생한다. 데이터베이스는 이러한 중복된 정보에 대해서 데이터를 통합하여 자료의 중복을 최소화한 데이터의 모임으로 구성한다. 
- 저장된 데이터: 우리가 사진이나 동영상 파일을 하드디스크나 SSD에 저장하는 것처럼 DB도 컴퓨터가 접근할 수 있는 메체에 데이터를 저장한다. 
- 운영 데이터: 데이터베이스는 주로 조직의 목적을 위해 존재하고 활용되는 운영 데이터를 다루는데 주요 이용된다.
- 공유 데이터: 여러 사람들이 공유하고 사용할 목적으로 통합 관리되는 데이터를 말한다. 하나의 컴퓨터나 시스템을 위한 데이터가 아니라 여러 시스템들이 공용으로 엑세스하여 이용한다.

데이터베이스 기능 특징
- 실시간 접근성: 데이터베이스는 사용자의 요구에 신속하고 정확하게 응답이 가능해야 한다.
- 계속적인 변화: 현실 세계의 변화를 반영하기 위해 새로운 데이터의 삽입, 삭제, 갱신으로 항상 최신의 데이터를 유지하는 것을 의미한다.
- 동시 공용: 다수의 사용자가 동시에 같은 내용의 데이터를 이용할 수 있다. 
- 내용에 의한 참조: 데이터베이스에 있는 데이터를 참조할 때 사용자의 요구에 따른 데이터 내용으로 데이터의 위치나 주소로 데이터를 찾는다. 

데이터베이스 언어의 종류
- 데이터베이스와 소통하기 위해 사용되는 언어 중 가장 많이 사용되는 것은 SQL이다.
- SQL은 관계형 데이터베이스에서 데이터를 정의하고 조작하고 제어할 수 있는 표준 언어로 대부분의 데이터베이스 시스템에서 지원한다. 그리고 데이터를 조회하느냐 삭제하느냐에 따라 데이터베이스 언어는 크게 4가지로 나뉘게 된다.
  - 데이터 조작어(DML): Select, Insert, Update, Delete
  - 데이터 정의어(DDL): Create, Alter, Drop, Rename, Truncate
  - 데이터 제어어(DCL): Grant, Revoke
  - 트랜잭션 제어어(TCL): Commit, Rollback, Savepoint

DBMS
- DBMS는 단어 그대로 데이터베이스를 관리하는 소프트웨어이다. 데이터베이스는 특정 조직의 업무를 수행하는 데 필요한 상호 관련된 데이터들의 복잡한 모임인데 DBMS는 이러한 데이터베이스의 데이터들을 효율적으로 저장하고 검색하고 수정하고 삭제하고 보호할 수 있또록 도와준다.
[DBMS의 역사]
  - 1세대: 파일시스템
  - 2세대: 계층형 HDBMS
  - 3세대: 네트워크형 NDBMS
  - 4세대: 관계형 RDBMS
  - 5세대: 객체지향 ODBMS

1. HDBMS
- 60년대 개발된 최초의 DBMS로 데이터를 트리 구조로 표현하는 방식으로 데이터 접근 속도가 빠르고 단순한 구조를 가지는 장점이 있지만 데이터의 중복이 많고 구조 변경이 어렵고 관계푠현이 제한적인 단점이 존재한다.
2. NDBMS
- 70년대 개발된 DBMS로 데이터를 그래프 구조로 표현하는 방식이다. NDBMS는 HDBMS보다 관계 표현이 유연하고 다대다 관계를 지원하는 장점이 있지만 구성과 설계가 복잡하고 데이터 종속성을 해결하지 못한다는 단점이 존재한다. 
3. RDBMS
- 70년대 개발된 DBMS 로 데이터를 테이블 형태로 표현하는 방식이로 데이터의 중복을 최소화하고 구조 변경이 쉬우며 SQL 언어를 사용하여 데이터를 쉽게 조작할 수 있는 장점이 존재한다. 또한 ACID원칙을 준수하여 데이터의 무결성과 일관성을 보장한다.
- RDBMS는 현재 가장 널리 사용되는 DBMS로 MySQL, Oracle, SQLite등이 존재한다. 
4. ODBMS
- 80년대 개발된 DBMS로 데이터를 객체의 형태로 표현하는 방식으로 객체지향 프로그래밍 언어와 호환성이 높고 복잡한 데이터 타입을 지원하는 장점이 존재하지만 성능이 낮고 표준화가 부족해 SQL과 호환되지 않는 단점이 있어 거의 사장되고 다음 타자인 NOSQL로 넘어갔다.
5. NO SQL
- 2000년대 개발된 DBMS로 테이블 형태의 관계형 모델이 아닌 여러가지 모델로 데이터를 표현하는 방식이다. 문서나 키-값 쌍이나 그래프 등으로 데이터를 나타낼 수 있어서 NOSQL은 어느 한가지 형태의 데이터베이스를 지칭하지 않고 RDBMS의 테이블 형태가 아닌 형태를 띈 DB를 총칭한다.
- NOSQL은 RDBMS보다 확장성과 가용성이 높고 유연한 스키마를 가지는 장점이 있지만 데이터의 일관성이 항상 보장되지 않고 기존 SQL과 호환되지 않는 단점이 존재한다. 또한, 대용량 데이터나 분산 처리에 매우 빠르게 대응하므로 페이스북, 스냅챗과 같은 SNS에서 사용된다.
- NOSQL의 종류로는 MongoDB, HBase, Cassandra, Redis등이 존재한다.






참고: https://inpa.tistory.com/entry/DB-%F0%9F%93%9A-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%85%90
