Redis란?
- 레디스는 Remote Dictionary Server의 약자로 "키-값" 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 DB관리 시스템이다.
- 즉 레디스는 데이터 처리 속도가 엄청 빠른 NOSQL 데이터베이스다.
- NoSQL 데이터베이스를 풀어서 얘기하면 Key-Value의 형태로 저장하는 데이터베이스이다.

Redis의 장점
- 레디스는 인메모리에 모든 데이터를 저장하여 데이터의 처리 성능이 굉장히 빠르다.
- MySQl과 같은 RDBMS의 데이터베이스는 대부분 디스크(Disk)에 데이터를 저장한다. 하지만 레디스는 메모리(RAM)에 데이터를 저장하여 디스크보다 메모리에서의 데이터 처리속도가 월등히 빠르다. 
- 이러한 이유로 레디스의 데이터 처리 속도가 RDBMS에 비해 훨씬 빠르다. 

Redis의 주요 사례
- 캐싱(Cashing)
- 세션 관리
- 실시간 분석 및 통계
- 메시지 큐
- 지리공간 인덱싱
- 속도제한
- 실시간 채팅 및 메시징

레디스에 내장된 기능이 다양하다보니 여러 용도로 사용된다. 현업에서 가장 많이 캐싱(데이터 조회 성능 향상)이 사용된다.

Redis 명령어 ++++++> 추가하기

데이터 저장 시 만료기간(TTL) 정하기
- 레디스는 RDBMS와는 다르게 데이터 처리 시 만료시간을 설정할 수 있다. 즉, 영구적으로 데이터를 저장하지 않고 일정 시간이 되면 데이터가 삭제되도록 설정할 수 있다.
- 레디스의 특성 상 메모리 공간이 한정되어있기 떄문에 모든 데이터를 레디스에 저장할 수 없다. 따라서 만료시간(TTL)을 활용해 자주 사용하는 데이터만 레디스에 저장해놓고 쓰는 방식으로 활용한다.

Redis에서 Key네이밍 컨벤션 익히기
- 콜론(:)을 활용해 계층적으로 의미를 구분해서 사용한다.
ex. user:100:profile => user중 PK가 100인 user의 profile
컨벤션을 정했을 떄의 장점
1. 가독성: 데이터의 의미와 용도를 쉽게 파악할 수 있다.
2. 일관성: 컨벤션을 따름으로써 코드의 일관성이 높아지고 유지보수가 쉬워진다.
3. 검색 및 필터링 용이성: 패턴 매칭을 사용해 특정 유형의 Key를 쉽게 찾을 수 있다.
4. 확장성: 서로 다른 Key와 이름이 겹쳐 충돌할 일이 적어진다. 




